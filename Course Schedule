public class Solution {
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        int[] inD = new int[numCourses];
        Queue<Integer> q = new ArrayDeque<>();
        for(int i=0; i<prerequisites.length; i++)
            inD[prerequisites[i][1]]++;
        for(int i=0; i<inD.length; i++)
            if(inD[i] == 0) q.offer(i);
        while(!q.isEmpty()) {
            int s = q.poll();
            for(int i=0; i<prerequisites.length; i++) {
                if(prerequisites[i][0] == s) {
                    inD[prerequisites[i][1]]--;
                    if(inD[prerequisites[i][1]] == 0)
                        q.offer(prerequisites[i][1]);
                }

            }
        }
        for(int i=0; i<inD.length; i++)
            if(inD[i] != 0) return false;
        return true;
    }
}
