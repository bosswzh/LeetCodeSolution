/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isSymmetric(TreeNode root) {
        Queue<TreeNode> q1 = new LinkedList<TreeNode>(), q2 = new LinkedList<TreeNode>();
        q1.offer(root.left);
        q2.offer(root.right);
        while(q1.size() != 0 && q2.size() != 0) {
        	TreeNode t1 = q1.poll();
        	TreeNode t2 = q2.poll();
        	if(t1 == null && t2 == null) continue;
        	if(t1 == null || t2 == null || t1.val != t2.val) return false;
        	q1.offer(t1.left);
        	q2.offer(t2.right);
        	q1.offer(t1.right);
        	q2.offer(t2.left);
        }
        if(q1.size() != q2.size())
        	return false;
        return true;
    }
}


/* 这个的结构很好 */
public boolean isMirror(TreeNode a, TreeNode b) {
	return (a==null || b==null) ? (a==b) : (a.val==b.val && isMirror(a.left, b.right) && isMirror(a.right, b.left));
}